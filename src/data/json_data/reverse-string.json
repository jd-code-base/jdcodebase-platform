{
  "title": "Reverse String",
  "slug": "reverse-string",
  "leetcodeId": "#344",
  "category": ["String", "Two Pointer"],
  "problemStatement": "Write a function that reverses a character array in-place. You must do this by modifying the input array directly with O(1) extra memory.",
  "examples": [
    {
      "input": "[\"h\",\"e\",\"l\",\"l\",\"o\"]",
      "output": "[\"o\",\"l\",\"l\",\"e\",\"h\"]"
    },
    {
      "input": "[\"H\",\"a\",\"n\",\"n\",\"a\",\"h\"]",
      "output": "[\"h\",\"a\",\"n\",\"n\",\"a\",\"H\"]"
    }
  ],
  "approach": [
    {
      "title": "Two Pointer In-place Reversal",
      "steps": [
        "Initialize two pointers: `left = 0` and `right = s.length - 1`.",
        "While `left < right`, swap `s[left]` and `s[right]`.",
        "Increment `left` and decrement `right` after each swap.",
        "This continues until the pointers meet in the middle.",
        "Note: This approach modifies the array in-place and uses no extra memory."
      ],
      "code": "// ðŸ”¹ Two Pointer In-place Reversal\nvar reverseString = function(s) {\n  let left = 0, right = s.length - 1;\n\n  while (left < right) {\n    [s[left], s[right]] = [s[right], s[left]]; // Swap using destructuring\n    left++;\n    right--;\n  }\n};"
    }
  ],
  "timeComplexity": "O(n)",
  "spaceComplexity": "O(1)",
  "leetcodeLink": "https://leetcode.com/problems/reverse-string/",
  "videoLink": "sIMh93UP4aQ",
  "pptLink": "https://1drv.ms/p/c/d9a1d5f2dacf7aea/IQRadyARq_8tQ709crU_s6lhAT7zIdmc3G6DZMQo-gHIvS0?em=2&wdAr=1.7777777777777777"
}
