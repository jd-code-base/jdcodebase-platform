{
  "title": "Reverse Words in a String III",
  "slug": "reverse-words-in-a-string-iii",
  "leetcodeId": "#557",
  "category": ["String", "Two Pointer"],
  "problemStatement": "Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.",
  "examples": [
    {
      "input": "s = \"Mr Ding\"",
      "output": "\"rM gniD\"",
      "explanation": "Each word is reversed but the order of the words remains the same."
    },
    {
      "input": "s = \"Hello World\"",
      "output": "\"olleH dlroW\"",
      "explanation": "Each word is reversed in place."
    },
    {
      "input": "s = \"a b c\"",
      "output": "\"a b c\"",
      "explanation": "Single character words remain the same."
    }
  ],
  "approach": [
    {
      "title": "Split and Reverse Each Word",
      "steps": [
        "Split the input string by spaces to isolate words.",
        "For each word, reverse its characters using a two-pointer approach.",
        "Use a helper function that converts the word to an array, swaps characters from both ends, and joins it back.",
        "Join the reversed words using spaces to reconstruct the sentence."
      ],
      "code": "var reverseWords = function(s) {\n  let chars = s.split(\" \");\n  for (let i = 0; i < chars.length; i++) {\n    chars[i] = reverseWord(chars[i]);\n  }\n  return chars.join(\" \");\n};\n\nfunction reverseWord(word) {\n  let start = 0, end = word.length - 1;\n  let chars = word.split(\"\");\n  while (start < end) {\n    [chars[start], chars[end]] = [chars[end], chars[start]];\n    start++;\n    end--;\n  }\n  return chars.join(\"\");\n}"
    }
  ],
  "timeComplexity": "O(n)",
  "spaceComplexity": "O(n)",
  "leetcodeLink": "https://leetcode.com/problems/reverse-words-in-a-string-iii/",
  "videoLink": "o-ymMqY-0So",
  "pptLink": "https://1drv.ms/p/c/d9a1d5f2dacf7aea/IQSQCaVurjHnQIQOc16d1fdtAdo4BESjoUoZVPiD4hTVTwo?em=2&wdAr=1.7777777777777777"
}
