{
  "title": "Squares of a Sorted Array",
  "slug": "squares-of-sorted-array",
  "leetcodeId": "#977",
  "category": ["Array", "Two Pointer", "Sorting", "Foundation"],
  "problemStatement": "Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number, also sorted in non-decreasing order.",
  "examples": [
    {
      "input": "nums = [-4, -1, 0, 3, 10]",
      "output": "[0, 1, 9, 16, 100]",
      "explanation": "Square each element: [16, 1, 0, 9, 100] ➝ sort the array to get [0, 1, 9, 16, 100]."
    }
  ],
  "approach": "1. Loop through the array and square each number.\n2. Use JavaScript's `.sort()` method with a custom comparator to sort numerically.\n\nImportant: `.sort()` sorts strings by default, so we use `(a, b) => a - b` for numeric sort.",
  "code": "var sortedSquares = function(nums) {\n  for (let i = 0; i < nums.length; i++) {\n    nums[i] = nums[i] * nums[i];\n  }\n  return nums.sort((a, b) => a - b);\n};\n\nconsole.log(sortedSquares([-4, -1, 0, 3, 10])); // Output: [0, 1, 9, 16, 100]",
  "timeComplexity": "O(n log n)",
  "spaceComplexity": "O(1) (in-place, ignoring output array if returned separately)",
  "leetcodeLink": "https://leetcode.com/problems/squares-of-a-sorted-array/",
  "videoLink": "ykHe6-JUig0"
}
