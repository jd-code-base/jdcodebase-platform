{
  "title": "Is Subsequence",
  "slug": "is-subsequence",
  "leetcodeId": "#392",
  "category": ["String", "Two Pointer"],
  "problemStatement": "Given two strings s and t, return true if s is a subsequence of t, or false otherwise.\n\nA subsequence of a string is a new string formed by deleting some (or no) characters from the original string, without disturbing the relative order of the remaining characters.",
  "examples": [
    {
      "input": "s = \"abc\", t = \"ahbgdc\"",
      "output": "true",
      "explanation": "\"a\", \"b\", and \"c\" appear in order in t."
    },
    {
      "input": "s = \"axc\", t = \"ahbgdc\"",
      "output": "false",
      "explanation": "\"x\" is not present in t, so s is not a subsequence."
    },
    {
      "input": "s = \"ace\", t = \"abcde\"",
      "output": "true",
      "explanation": "All characters of s appear in order in t."
    }
  ],
  "approach": [
    {
      "title": "Two Pointer Technique",
      "steps": [
        "Initialize two pointers: `sIndex = 0` for string `s` and `tIndex = 0` for string `t`.",
        "Loop through string `t` using `tIndex`.",
        "At each step, if `s[sIndex] === t[tIndex]`, increment `sIndex` (we matched one character).",
        "Always increment `tIndex` regardless of match.",
        "After the loop ends, check if `sIndex === s.length`. If true, all characters of `s` were found in order inside `t`, so return true.",
        "Otherwise, return false."
      ],
      "code": "var isSubsequence = function(s, t) {\n  let sIndex = 0;\n  let tIndex = 0;\n\n  while (tIndex < t.length) {\n    if (s[sIndex] === t[tIndex]) {\n      sIndex++;\n    }\n    tIndex++;\n  }\n\n  return sIndex === s.length;\n};"
    }
  ],
  "timeComplexity": "O(n), where n is the length of string t",
  "spaceComplexity": "O(1), using just two pointers",
  "leetcodeLink": "https://leetcode.com/problems/is-subsequence/",
  "pptLink": "https://1drv.ms/p/c/d9a1d5f2dacf7aea/IQShKXPWeL_ySpKy86aaBxV-AQGibDqJdBthTiAy5XkfPRk?em=2&wdAr=1.7777777777777777",
  "videoLink": "SMopvt9jUIU"
}
