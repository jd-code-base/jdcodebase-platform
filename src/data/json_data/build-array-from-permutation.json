{
  "title": "Build Array from Permutation",
  "slug": "build-array-from-permutation",
  "leetcodeId": "#1920",
  "category": ["Array", "Foundation"],
  "problemStatement": "You're given a zero-based permutation array nums (which means the array contains all distinct numbers from 0 to nums.length - 1). You need to build a new array ans of the same length where: ans[i] = nums[nums[i]] for each 0 <= i < nums.length.",
  "examples": [
    {
      "input": "nums = [0,2,1,5,3,4]",
      "output": "[0,1,2,4,5,3]",
      "explanation": "For each index i, we assign ans[i] = nums[nums[i]]."
    },
    {
      "input": "nums = [5,0,1,2,3,4]",
      "output": "[4,5,0,1,2,3]",
      "explanation": "Same logic applies â€” lookup nums[nums[i]] for each i."
    }
  ],
  "approach": [
    {
      "title": "Direct Index Mapping",
      "steps": [
        "Initialize an empty array `ans`.",
        "Loop from `i = 0` to `nums.length - 1`.",
        "At each step, assign `ans[i] = nums[nums[i]]`.",
        "Return the `ans` array."
      ],
      "code": "var buildArray = function(nums) {\n    let ans = [];\n    for (let i = 0; i < nums.length; i++) {\n        ans[i] = nums[nums[i]];\n    }\n    return ans;\n};"
    }
  ],
  "timeComplexity": "O(n)",
  "spaceComplexity": "O(n)",
  "leetcodeLink": "https://leetcode.com/problems/build-array-from-permutation/",
  "videoLink": "52WndzMGqAs"
}
